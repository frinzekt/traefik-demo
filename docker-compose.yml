version: "3.2"

services:
  proxy:
    image: traefik:v2.0
    command:
      - --api.insecure=false
      - "--providers.docker" # Tells Traefik to listen to docker
      - "--log.level=INFO"
      - "--api.insecure=true"
      - --entryPoints.web.address=:80
      - --entryPoints.websecure.address=:443
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    labels: 
      - "traefik.enable=true"
      - "traefik.http.routers.router1.rule=host(`traefik-dashboard.spontane.fun`)"
      - "traefik.http.routers.router1.service=service1"
      - "traefik.http.services.service1.loadbalancer.server.port=8080"
      - "traefik.http.routers.router2.rule=host(`traefik-test.spontane.fun`)"
      - "traefik.http.routers.router2.service=service2"
      - "traefik.http.services.service2.loadbalancer.server.port=80"

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - internal
      - default

  whoami:
    image: containous/whoami
    labels: 
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`whoami.spontane.fun`)"
    networks: 
      - internal
  
  pino:
    build:
      context: ./pino
    image: my-pino
    env_file: docker-compose.env
    ports:
      - "4000" # Internal port of docker container
    labels: 
      - "traefik.enable=true"
      - "traefik.backend=pino"
      - "traefik.http.routers.pino.rule=Host(`pino.spontane.fun`)"
    depends_on:
      - proxy
    networks: 
      - internal

  mino:
    build:
      context: ./mino
    image: my-mino
    ports:
      - "5000" # Internal port of docker container 
    labels: 
      - "traefik.enable=true"
      - "traefik.backend=mino"
      - "traefik.http.routers.mino.rule=Host(`mino.spontane.fun`)"
      - "traefik.http.routers.mino.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=test:$$apr1$$H6uskkkW$$IgXLP6ewTrSuBkTrqE8wj/,test2:$$apr1$$d9hr9HBB$$4HxwgUir3HP4EsggP/QNo0"
    depends_on: 
      - proxy
    networks: 
      - internal
    

networks:
  internal: 
